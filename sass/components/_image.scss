@use '../abstracts/mixins' as m;
@use '../abstracts/colors' as c;
@use '../abstracts/typography' as t;
@use '../abstracts/variables' as v;

/* Images and frames =================== */
.BW-img{
    filter: grayscale(100%);
}

.img-container{
    display: flex;
    align-items: center;
    background-color: c.$base-l;  
}

.left-bottom-curved{
    background-color: c.$contrast-m;
    border-bottom-left-radius:map-get(v.$curve-radius , xs );
    // border-top-right-radius:calc(map-get(v.$curve-radius , xs ) - 2.2rem);
    @media screen and (min-width: v.$sw-s-m){
        border-bottom-left-radius:map-get(v.$curve-radius , s-m );
        // border-top-right-radius:calc(map-get(v.$curve-radius , s-m ) - 2.2rem);
    }
    @media screen and (min-width: v.$sw-m-l){
        border-bottom-left-radius:map-get(v.$curve-radius , m-l );
        // border-top-right-radius:0;
    }
    @media screen and (min-width: v.$sw-xl){
        border-bottom-left-radius:map-get(v.$curve-radius , xl );
        border-top-right-radius:0
    }
    margin: calc(-1 * v.$border-thickness) calc(-1 * v.$border-thickness) v.$border-thickness v.$border-thickness;
    overflow: hidden;
}
.right-bottom-curved{
    background-color: c.$contrast-m;
    border-bottom-right-radius:map-get(v.$curve-radius , xs );
    @media screen and (min-width: v.$sw-s-m){
        border-bottom-right-radius:map-get(v.$curve-radius , s-m );
    }
    @media screen and (min-width: v.$sw-m-l){
        border-bottom-right-radius:map-get(v.$curve-radius , m-l );
    }
    @media screen and (min-width: v.$sw-xl){
        border-bottom-right-radius:map-get(v.$curve-radius , xl );
    }
    margin: calc(-1 * v.$border-thickness) v.$border-thickness v.$border-thickness calc(-1 * v.$border-thickness);
    overflow: hidden;
}
.left-top-curved{
    background-color: c.$contrast-m;
    border-top-left-radius:map-get(v.$curve-radius , xs );
    @media screen and (min-width: v.$sw-s-m){
        border-top-left-radius:map-get(v.$curve-radius , s-m );
    }
    @media screen and (min-width: v.$sw-m-l){
        border-top-left-radius:map-get(v.$curve-radius , m-l );
    }
    @media screen and (min-width: v.$sw-xl){
        border-top-left-radius:map-get(v.$curve-radius , xl );
    }
    margin: calc(-1 * v.$border-thickness) calc(-1 * v.$border-thickness) v.$border-thickness v.$border-thickness;
    margin: v.$border-thickness  calc(-1 * v.$border-thickness) calc(-1 * v.$border-thickness) v.$border-thickness;
    overflow: hidden;
}
.right-top-curved{
    background-color: c.$contrast-m;
    border-top-right-radius:map-get(v.$curve-radius , xs );
    @media screen and (min-width: v.$sw-s-m){
        border-top-right-radius:map-get(v.$curve-radius , s-m );
    }
    @media screen and (min-width: v.$sw-m-l){
        border-top-right-radius:map-get(v.$curve-radius , m-l );
    }
    @media screen and (min-width: v.$sw-xl){
        border-top-right-radius:map-get(v.$curve-radius , xl );
    }
    margin: v.$border-thickness v.$border-thickness calc(-1 * v.$border-thickness) calc(-1 * v.$border-thickness);
    overflow: hidden;
}


.figure{
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    gap: .5rem;
}

.framed{
    padding: 1rem;
    border: 4px #fff solid;
    border-radius: 2rem;

    &>*{
        border-radius: 1rem;        
    }
    .v-scrollable{     
        overflow: hidden;
        overflow-y: scroll;
    }
    &.desktop .v-scrollable{
        @media (orientation: portrait){
            max-height: 35vh;
        }        
        @media (orientation: landscape){
            max-height: 50vh;
        }        
    }
    &.mobile .v-scrollable{
        @media (orientation: portrait){
            max-height: 85vh;
            min-height: 70vh;
        }        
        @media (orientation: landscape){
            max-height: 50vh;
        }        
    }
    &.mobile-long .v-scrollable{
        @media (orientation: portrait){
            max-height: 85vh;
            min-height: 70vh;
        }        
        @media (orientation: landscape){
            height: 63vh;
        }        
    }

    &.tall .v-scrollable{
        max-height: 75vh;
    } 

    
    ::-webkit-scrollbar{
        width: 8px;
    }
    ::-webkit-scrollbar-thumb{
        background-color: var(--accent-color-m);
        border-radius: 16px;
    }
    ::-webkit-scrollbar-track{
        background-color: c.$contrast-m;
        border-radius: 16px;
    }
}

li img{
    margin: .5rem auto 0 auto;
    @media screen and (min-width: v.$sw-m){
        max-width: 50%;
    }
    
}
// section:has(.zoomedIn){
//     background-color: red;

// }

// .zoomable{
//     transition: all .5s ease-in-out;
//     &:hover{
//         cursor: zoom-in;
//     }

//     &.zoomedIn{
//         margin: auto;        
//         width: 100%;
//         height: auto;

//         &:hover{
//             cursor: zoom-out;
//         }
//     }
// }

// body:has(.zoomedIn) > *{
//     // display: none;
//     & > .zoomedIn{
//         display: unset;
//     }
// }

